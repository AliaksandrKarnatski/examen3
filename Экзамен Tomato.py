# Класс Tomato:
# 1. Создайте класс Tomato
class Tomato:

# 2. Создайте статическое свойство states, которое будет содержать все стадии
# созревания помидора
    states={1:'малюпас',2:'ещё чуть-чуть',3:'спелый'}

# 3. Создайте метод __init__(), внутри которого будут определены два динамических
# protected свойства: 1) _index - передается параметром и 2) _state - принимает первое
# значение из словаря states
    def __init__(self, index):
        self._index=index
        self._state=0

# 4. Создайте метод grow(), который будет переводить томат на следующую стадию
# созревания
    def grow(self):
        self._next_state()

# 5. Создайте метод is_ripe(), который будет проверять, что томат созрел (достиг
# последней стадии созревания)
    def is_ripe(self):
        if self._state==3:
            return True
        else:
            return False



# Класс TomatoBush
# 1. Создайте класс TomatoBush
class TomatoBush:

# 2. Определите метод __init__(), который будет принимать в качестве параметра
# количество томатов и на его основе будет создавать список объектов класса
# Tomato. Данный список будет храниться внутри динамического свойства tomatoes.
    def __init__(self,num):
        self.tomatoes=[self._index] #( НО ЭТО НЕ ТОЧНО)

# 3. Создайте метод grow_all(), который будет переводить все объекты из списка
# томатов на следующий этап созревания
    def grow_all(self):
        for i in self.tomatoes:
            i.grow()
# 4. Создайте метод all_are_ripe(), который будет возвращать True, если все томаты из
# списка стали спелыми
# 5. Создайте метод give_away_all(), который будет чистить список томатов после
# сбора урожая
# Класс Gardener
# 1. Создайте класс Gardener
# 2. Создайте метод __init__(), внутри которого будут определены два динамических
# свойства: 1) name - передается параметром, является публичным и 2) _plant -
# принимает объект класса Tomato, является protected
# 3. Создайте метод work(), который заставляет садовника работать, что позволяет
# растению становиться более зрелым
# 4. Создайте метод harvest(), который проверяет, все ли плоды созрели. Если все -
# садовник собирает урожай. Если нет - метод печатает предупреждение.
# 5. Создайте статический метод knowledge_base(), который выведет в консоль справку
# по садоводству.
# Тесты:
# 1. Вызовите справку по садоводству
# 2. Создайте объекты классов TomatoBush и Gardener
# 3. Используя объект класса Gardener, поухаживайте за кустом с помидорами
# 4. Попробуйте собрать урожай
# 5. Если томаты еще не дозрели, продолжайте ухаживать за ними
# 6. Соберите урожай